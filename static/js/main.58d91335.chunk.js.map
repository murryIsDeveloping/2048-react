{"version":3,"sources":["2048/Tile.js","2048/Tiles.js","utility/PlusMinus.js","utility/Toggle.js","2048/Video.js","2048/Toolbar.js","2048/Game.js","App.js","serviceWorker.js","index.js"],"names":["Tile","props","classNames","value","className","randomIndex","length","Math","floor","random","gameEnd","tiles","every","row","tile","boardFull","x","y","setValue","l","map","rowIndex","columnIndex","newTiles","size","Array","fill","turnMatrix","turns","matrix","val","index","reverse","calcCells","totalScore","forEach","merge","score","t1","t2","rest","toString","Number","filter","merged","padding","push","mergeFn","mergeLeft","mergeDown","mergeRight","mergeUp","mergeTiles","direction","matrix1","matrix2","JSON","stringify","PlusMinus","onClick","valueChanged","Toggle","show","onToggle","Video","videoRef","React","createRef","intervalSub","handModel","state","camera","hand","hasGetUserMedia","navigator","mediaDevices","getUserMedia","this","setState","loadHandModel","handTrack","flipHorizontal","maxNumBoxes","iouThreshold","scoreThreshold","then","model","clearInterval","video","stream","current","srcObject","detect","prediction","prev","bbox","xDif","yDif","abs","document","getElementById","setInterval","predictions","handControl","catch","err","console","log","toggleHandControl","Fragment","draggable","width","height","autoPlay","id","ref","Component","ToolBar","reset","sizeCtl","Game","gameover","tilesClassNames","tabIndex","onKeyDown","event","key","class","onSwipedLeft","_","onSwipedRight","onSwipedUp","onSwipedDown","rIndex","tIndex","App","Boolean","window","location","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.58d91335.chunk.js","sourcesContent":["import React from 'react'\n\nconst Tile = (props) => {\n    const classNames = `tile v-${props.value}`\n    return <div className=\"tile-wrapper\"><div className={classNames}><span>{props.value}</span></div></div>\n}\n\nexport default Tile","const randomIndex = (length) => Math.floor(Math.random() * length);\nconst randomValue = () => (Math.random() > 0.3 ? \"2\" : \"4\");\nconst boardFull = (tiles) =>\n  tiles.every((row) => row.every((tile) => tile !== \"\"));\n\nexport const gameEnd = (tiles) => {\n  if (boardFull(tiles)) {\n    // check rows\n    for (let x = 0; x < tiles.length - 1; x++) {\n      for (let y = 0; y < tiles.length; y++) {\n        if (tiles[x][y] === tiles[x + 1][y]) {\n          return false;\n        }\n      }\n    }\n\n    //check columns\n    for (let x = 0; x < tiles.length; x++) {\n      for (let y = 0; y < tiles.length - 1; y++) {\n        if (tiles[x][y] === tiles[x][y + 1]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n};\n\nexport const setValue = (tiles) => {\n  const l = tiles.length;\n  const [x, y] = [randomIndex(l), randomIndex(l)];\n  if (tiles[x][y] !== \"\") {\n    return setValue(tiles);\n  } else {\n    return tiles.map((row, rowIndex) =>\n      row.map((tile, columnIndex) => {\n        if (rowIndex === x && columnIndex === y) {\n          return randomValue();\n        } else {\n          return tile;\n        }\n      })\n    );\n  }\n};\n\nexport const newTiles = (size) => {\n  const tiles = Array(size).fill(Array(size).fill(\"\"));\n  return setValue(setValue(tiles));\n};\n\nconst turnMatrix = (turns, matrix) => {\n  if (turns === 0) {\n    return matrix;\n  }\n\n  const turnedMatrix = matrix[0].map((val, index) =>\n    matrix.map((row) => row[index]).reverse()\n  );\n  return turnMatrix(turns - 1, turnedMatrix);\n};\n\nconst merge = (tiles, row = [], score = 0) => {\n  if (tiles.length <= 1) {\n    return { tiles: [...row, ...tiles], score };\n  }\n\n  const [t1, t2, ...rest] = tiles;\n\n  return t1 === t2 ? merge(rest, [...row, (t1 * 2).toString()], score+Number(t1)) : merge([t2, ...rest], [...row, t1], score)\n};\n\nconst calcCells = (tiles) => {\n  let totalScore = 0;\n  let matrix = []\n  tiles.forEach((row) => {\n    let {tiles: merged, score } = merge(row.filter((x) => x !== \"\"));\n    totalScore += score\n    let padding = tiles.length - merged.length;\n    matrix.push([...merged, ...Array(padding).fill(\"\")]);\n  });\n\n  return {\n    tiles: matrix,\n    score: totalScore\n  }\n}\n\nconst mergeFn = (turns) => (tiles) => {\n  if (turns === 0) {\n    return calcCells(tiles);\n  } else {\n    const { tiles: matrix, score } = calcCells(turnMatrix(turns, tiles))\n    return {\n      tiles: turnMatrix(4 - turns, matrix),\n      score\n    }\n  }\n};\n\nconst mergeLeft = mergeFn(0);\nconst mergeDown = mergeFn(1);\nconst mergeRight = mergeFn(2);\nconst mergeUp = mergeFn(3);\n\nconst matrixEqual = (matrix1, matrix2) => JSON.stringify(matrix1) === JSON.stringify(matrix2)\n\nexport const mergeTiles = (tiles, direction) => {\n  const merged = direction === \"ArrowLeft\" || direction === \"LEFT\" ? mergeLeft(tiles)\n               : direction === \"ArrowRight\" || direction === \"RIGHT\" ? mergeRight(tiles)\n               : direction === \"ArrowDown\" || direction === \"DOWN\" ? mergeDown(tiles)\n               : direction === \"ArrowUp\" || direction === \"UP\" ? mergeUp(tiles)\n               : { tiles, score: 0 };\n    \n\n\n  return matrixEqual(merged.tiles, tiles) ? merged : { score: merged.score, tiles: setValue(merged.tiles)}\n};\n","import React from 'react';\n\nconst PlusMinus = (props) => {\n  return (\n    <div className=\"plus-minus\">\n        <div className=\"plus-minus-btn\" onClick={() => props.valueChanged(props.value-1)}>{\"<\"}</div> \n        <span className=\"plus-minus-value\">{props.value}</span>\n        <div className=\"plus-minus-btn\" onClick={() => props.valueChanged(props.value+1)}>{\">\"}</div>\n    </div>\n  );\n}\n\nexport default PlusMinus","import React from 'react';\n\nconst Toggle = (props) => {\n  return (\n      <div className={\"toggle\" + (props.show ? \" active\" : \"\")} onClick={props.onToggle}>\n          <div className=\"inner-toggle\"></div>\n      </div>\n  );\n}\n\nexport default Toggle","import React from \"react\";\nimport Toggle from \"../utility/Toggle\";\nimport * as handTrack from \"handtrackjs\";\nimport Draggable from \"react-draggable\";\n\nconst hasGetUserMedia = () => {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n};\n\nclass Video extends React.Component {\n  videoRef = React.createRef();\n  intervalSub = null;\n  handModel = null;\n\n  state = {\n    camera: false,\n    hand: null,\n    show: false,\n  };\n\n  hasGetUserMedia = () => {\n    return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n  };\n\n  componentDidMount() {\n    if (hasGetUserMedia()) {\n      this.setState((state) => ({\n        ...state,\n        camera: true,\n      }));\n\n      this.loadHandModel();\n    }\n  }\n\n  loadHandModel() {\n    const modelParams = {\n      flipHorizontal: true,\n      maxNumBoxes: 1,\n      iouThreshold: 0.5,\n      scoreThreshold: 0.85,\n    };\n\n    handTrack.load(modelParams).then((model) => {\n      this.handModel = model;\n    });\n  }\n\n  toggleHandControl() {\n    if (this.state.show) {\n      this.setState((state) => ({\n        ...state,\n        hand: null,\n        show: false,\n      }));\n\n      if (this.intervalSub) {\n        clearInterval(this.intervalSub);\n        this.intervalSub = null;\n      }\n    } else {\n      this.setState((state) => ({\n        ...state,\n        show: true,\n      }));\n\n      navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\n        if (this.videoRef.current) {\n          this.videoRef.current.srcObject = stream;\n          this.detect();\n        }\n      });\n    }\n  }\n\n  handControl(prediction) {\n    if (this.state.hand && prediction) {\n      let prev = this.state.hand;\n      let current = prediction.bbox;\n\n      let xDif = prev[0] - current[0];\n      let yDif = prev[1] - current[1];\n\n      let useX = Math.abs(xDif) > Math.abs(yDif);\n\n      if (useX && Math.abs(xDif) > 30) {\n        this.props.merge(xDif > 0 ? \"LEFT\" : \"RIGHT\");\n      } else if (Math.abs(yDif) > 15) {\n        this.props.merge(yDif > 0 ? \"UP\" : \"DOWN\");\n      }\n    }\n  }\n\n  detect() {\n    let video = document.getElementById(\"videoElement\");\n    this.intervalSub = setInterval(() => {\n      this.handModel\n        .detect(video)\n        .then((predictions) => {\n          this.handControl(predictions[0]);\n          this.setState((state) => ({\n            ...state,\n            hand: predictions.length ? predictions[0].bbox : state.hand,\n          }));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }, 500);\n  }\n\n  render() {\n    const showToggle = this.state.camera && !this.state.show;\n    if (showToggle) {\n      return (\n        <Toggle\n          show={this.state.show}\n          onToggle={() => this.toggleHandControl()}\n        ></Toggle>\n      );\n    } else if (this.state.show) {\n      return (\n        <React.Fragment>\n          <Toggle\n            show={this.state.show}\n            onToggle={() => this.toggleHandControl()}\n          ></Toggle>\n          <Draggable>\n            <div className=\"video-wrapper\" draggable={true}>\n                <video\n                    width={280}\n                    height={200}\n                    autoPlay={true}\n                    id=\"videoElement\"\n                    ref={this.videoRef}\n                ></video>\n            </div>\n          </Draggable>\n        </React.Fragment>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Video;\n","import React from \"react\";\nimport PlusMinus from \"../utility/PlusMinus\";\nimport Video from \"./Video\";\n\nconst ToolBar = (props) => {\n  return (\n    <div className=\"toolbar\">\n        <div className=\"toolbar-row\">\n        <h2 className=\"title\">2048</h2> <button onClick={props.reset}>&#8634;</button>\n        </div>\n      <div className=\"toolbar-row\">\n        <div className=\"toolbar-controller\">\n          <span>Change Grid Size:</span>\n          <PlusMinus\n            value={props.size}\n            valueChanged={props.sizeCtl}\n          ></PlusMinus>\n        </div>\n        <div className=\"toolbar-controller\">\n          <span>Use Hand Motion Controls:</span>\n          <Video merge={props.merge}></Video>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ToolBar;\n","import React from \"react\";\nimport Tile from \"./Tile\";\nimport { newTiles, gameEnd, mergeTiles } from \"./Tiles\";\nimport ToolBar from \"./Toolbar\";\nimport { Swipeable } from \"react-swipeable\";\n\nconst initSize = 4;\n\nclass Game extends React.Component {\n  state = {\n    size: initSize,\n    tiles: newTiles(initSize),\n    score: 0,\n    gameover: false,\n  };\n\n  reset = () => {\n    this.setState((state) => ({\n      ...state,\n      tiles: newTiles(state.size),\n      score: 0,\n      gameover: false,\n    }));\n  };\n\n  sizeCtl = (size) => {\n    if (size >= 3 && size <= 8) {\n      this.setState((state) => ({\n        ...state,\n        size: size,\n        tiles: newTiles(size),\n        score: 0,\n        gameover: false,\n      }));\n    }\n  };\n\n  merge = (direction) => {\n    let tiles = this.state.tiles;\n    let { tiles: newTiles, score } = mergeTiles(tiles, direction);\n\n    this.setState((state) => ({\n      ...state,\n      score: state.score + score,\n      tiles: newTiles,\n      gameover: gameEnd(newTiles),\n    }));\n  };\n\n  resetBtn() {\n    return <button onClick={this.reset}>&#8634;</button>;\n  }\n\n  render() {\n    const tilesClassNames = `tiles g-${this.state.size}`;\n    return (\n      <div\n        className=\"board\"\n        tabIndex=\"0\"\n        onKeyDown={(event) => this.merge(event.key)}\n      >\n        <ToolBar\n          reset={this.reset}\n          sizeCtl={this.sizeCtl}\n          size={this.state.size}\n          merge={this.merge}\n        ></ToolBar>\n\n        <h3 className=\"score\">Score: {this.state.score}</h3>\n        {this.state.gameover ? (\n          <React.Fragment>\n            <h2>Game Over!</h2>\n            <button class=\"red\" onClick={this.reset}>\n              &#8634;\n            </button>\n          </React.Fragment>\n        ) : null}\n        <Swipeable\n          onSwipedLeft={(_) => this.merge(\"LEFT\")}\n          onSwipedRight={(_) => this.merge(\"RIGHT\")}\n          onSwipedUp={(_) => this.merge(\"UP\")}\n          onSwipedDown={(_) => this.merge(\"DOWN\")}\n        >\n          <div className={tilesClassNames}>\n            {this.state.tiles.map((row, rIndex) =>\n              row.map((tile, tIndex) => {\n                let key = `${rIndex}-${tIndex}`;\n                return <Tile value={tile} key={key}></Tile>;\n              })\n            )}\n          </div>\n        </Swipeable>\n        <p class=\"directions\">\n          <strong>Merge tiles together to gain points.</strong>\n          <br/>If your on a computer use the arrow keys. \n          <br/>If on a mobile swipe the tiles.\n          <br/> If your feeling really brave toggle the <strong>\"use hand motion controller\" </strong> \n          and try to play by waving your hands side to side and using them as controls.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport Game from './2048/Game'\n\nfunction App() {\n  return (\n    <Game></Game>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}